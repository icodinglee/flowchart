import React from 'react';
// label为文本介绍
// id是组件的唯一标识
// selectData传入的数据（选择数据）
// callBack 可以把用户 选择的数据或者输入的数据传给父级
class SelectConfig extends React.Component{
    constructor(){
        super();
        this.state={
            IsSwitch:false,
            SelectIndex1:0
        };
        this.change=this.change.bind(this);
        this.selectChange1=this.selectChange1.bind(this);
        this.selectChange2=this.selectChange2.bind(this);
        this.inputBlur=this.inputBlur.bind(this);
    }
    change(){
        this.setState({
            IsSwitch:!this.state.IsSwitch
        })
    }
    selectChange1(event){
        let arr1=(event.target.value).split(';')
        this.setState({
            SelectIndex1:arr1[0],
        })
        this.props.callBack({selectValue1:arr1[1]});
    }
    selectChange2(event){
        this.props.callBack({selectValue2:event.target.value});
    }
    inputBlur(event){
        this.props.callBack({inputValue:event.target.value});
    }
    render(){
        return( <div>
                <form action="" onSubmit={this.formSubmit}>
                    <label>{this.props.label}：</label>&nbsp;&nbsp;
                    {this.state.IsSwitch?
                       <input type="text" onBlur={this.inputBlur} style={{border:'1px solid #7F8C8D'}}/>
                        :<span>
                            {/*第一个选项，后面的选项都是根据它的变化而变化的*/}
                           <select onChange={this.selectChange1}>
                             <option value=''>请选择</option>
                            {this.props.selectData.dropdown.map((items,index) => {
                               return (<option value={index+';'+items.firstOption} key={index}>{items.firstOption}</option>)
                                  })
                            }
                           </select>


                            {
                                this.props.selectData.dropdown[this.state.SelectIndex1].OtherOptions.map((items)=>{
                                    return ( <select>
                                        <option value=''>请选择</option>
                                        {items.options.map((item,index2) => {
                                            return (<option value={item} key={index2}>{item}</option>)
                                          })
                                        }
                                    </select>)
                                })
                            }


                        </span>
                        }

                    <span style={{float:'right'}}>
                      <input type="checkbox" checked={this.state.IsSwitch} onChange={this.change} id={this.props.id}/>&nbsp;&nbsp;
                      <label htmlFor={this.props.id} style={{display:'inline'}}>点此可切换输入方式</label>
                    </span>

                </form>
            </div>
            )
    }

}
export default SelectConfig;